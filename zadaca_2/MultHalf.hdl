CHIP MultHalf{

	IN a[16], b[16];
	OUT out[16];
	
	PARTS:
	Xor(a=a[15], b=b[15], out=out[15]);
	//“exclusive or,” returns 1 when its two inputs have opposing values, and 0 otherwise.
	//predznak mnozenja dva broja, 1. broj/15. bit
	
	Add16(a[10..14]=a[10..14], b[10..14]=b[10..14], a[0..9]=false, a[15]=false, b[0..9]=false, b[15]=false,out=out0);
	Add16(a=out0, b[0..9]=false, b[10]=true, b[11..13]=false, b[14]=true, b[15]=false, out[10..14]=out[10..14], out[15]=out1, out[0..9]=out2);
	
	Mult(a[0..9]=a[0..9], b[0..9]=b[0..9], a[10..15]=false, b[10..15]=false, out[6..15]=out[0..9], out[0..5]=out3);

}

	/* add16: a+b, MSB se ignorira
	5 bitova poslije predznaka je eksponent +15
	mnozenjem 2 broja se eksponenti zbrajaju pa moramo opet oduzeti 15
	 => zbrajamo samo 10..14, ostali su prazni out1,out2(,out3)
	na kraju se množe brojevi s desne strane točke 0..9 */