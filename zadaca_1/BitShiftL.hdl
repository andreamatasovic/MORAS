CHIP BitShiftL
{
    IN in[16];
    OUT out[16];

    PARTS:
    Or16(a[0..15] = false, b[1..15] = in[0..14], b[0] = false, out = out);
	//pomak za jedno mjesto ulijevo:
	//sve nule +(Or16) in[0..14], na zadnjem mjestu([0]) je 0(false)
}